version: 0.2
run-as: root

phases:
  pre_build:
    commands:
      - echo '-=-=-=-=-=-=-=-=-=-'
      - echo '-=-= print codebuild envs =-=-'
      - echo '-=-=-=-=-=-=-=-=-=-'
      - echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
      - echo AWS_REGION=$AWS_REGION
      - echo CODEBUILD_BATCH_BUILD_IDENTIFIER=$CODEBUILD_BATCH_BUILD_IDENTIFIER
      - echo CODEBUILD_BUILD_ARN=$CODEBUILD_BUILD_ARN
      - echo CODEBUILD_BUILD_ID=$CODEBUILD_BUILD_ID
      - echo CODEBUILD_BUILD_IMAGE=$CODEBUILD_BUILD_IMAGE
      - echo CODEBUILD_BUILD_NUMBER=$CODEBUILD_BUILD_NUMBER
      - echo CODEBUILD_BUILD_SUCCEEDING=$CODEBUILD_BUILD_SUCCEEDING
      - echo CODEBUILD_INITIATOR=$CODEBUILD_INITIATOR
      - echo CODEBUILD_KMS_KEY_ID=$CODEBUILD_KMS_KEY_ID
      - echo CODEBUILD_LOG_PATH=$CODEBUILD_LOG_PATH
      - echo CODEBUILD_PUBLIC_BUILD_URL=$CODEBUILD_PUBLIC_BUILD_URL
      - echo CODEBUILD_RESOLVED_SOURCE_VERSION=$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo CODEBUILD_SOURCE_REPO_URL=$CODEBUILD_SOURCE_REPO_URL
      - echo CODEBUILD_SOURCE_VERSION=$CODEBUILD_SOURCE_VERSION
      - echo CODEBUILD_START_TIME=$CODEBUILD_START_TIME
      - echo CODEBUILD_WEBHOOK_ACTOR_ACCOUNT_ID=$CODEBUILD_WEBHOOK_ACTOR_ACCOUNT_ID
      - echo CODEBUILD_WEBHOOK_BASE_REF=$CODEBUILD_WEBHOOK_BASE_REF
      - echo CODEBUILD_WEBHOOK_EVENT=$CODEBUILD_WEBHOOK_EVENT
      - echo CODEBUILD_WEBHOOK_MERGE_COMMIT=$CODEBUILD_WEBHOOK_MERGE_COMMIT
      - echo CODEBUILD_WEBHOOK_PREV_COMMIT=$CODEBUILD_WEBHOOK_PREV_COMMIT
      - echo CODEBUILD_WEBHOOK_HEAD_REF=$CODEBUILD_WEBHOOK_HEAD_REF
      - echo CODEBUILD_WEBHOOK_TRIGGER=$CODEBUILD_WEBHOOK_TRIGGER
      - echo HOME=$HOME
      - echo '-=-=-=-=-=-=-=-=-=-'
      - echo 'check docker version'
      - docker -v
      - echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
      - echo AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID
      - echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
      - echo IMAGE_REPO_NAME=$IMAGE_REPO_NAME
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - aws s3 cp s3://$S3_BUCKET_NAME/.env.$ENV .env
      - cat .env
      - docker build --platform=linux/amd64 -t $IMAGE_REPO_NAME:$IMAGE_TAG -f "${DOCKER_FILE_PATH}" .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Writing image definitions file...
      - echo CODEBUILD_BUILD_NUMBER=$CODEBUILD_BUILD_NUMBER
      - echo CODEBUILD_BUILD_SUCCEEDING=$CODEBUILD_BUILD_SUCCEEDING
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files:
    - target/*.jar
    - scripts/*.sh
    - appspec.yml
    - imagedefinitions.json
  discard-paths: yes
